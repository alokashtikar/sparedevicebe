/*
#common variables
variable "company_name" {
  default = "UNDEF"
}

variable "env"  {
  default = "UNDEF"
}

variable "aws_region" {
  default = "eu-west-2"
}

variable "env_name" {
  default = "UNDEF"
}

variable "s3_private_bucket_name" {
  default = "UNDEF-dev-pii"
}

variable "s3_public_bucket_name"  {
  default = "UNDEF-dev-asset-objects"
}

variable "s3_bo_bucket_name"  {
  default = "UNDEF-dev-bo"
}

variable "s3_hni_bucket_name"  {
  default = "UNDEF-dev-hni"
}

variable "iam_lambda_policy_file"  {
  default = "./bitz-iam-lambda-policy.json"
}

variable "iam_identity_backoffice_authenticated_policy_file"  {
  default = "./bitz-iam-cognito-identity-authenticated-policy.json"
}

variable "iam_identity_backoffice_unauthenticated_policy_file"  {
  default = "./bitz-iam-cognito-identity-unauthenticated-policy.json"
}

variable "dynamodb_point_in_time_recovery"  {
  default = "true"
}

variable "lambda_src_dir"  {
  default = "../tUNDEFab-backend/src/"
}

variable "lambda_function_package_file"  {
  default = "./UNDEF-prod-lambda.zip"
}

# to be deleted
variable "api_gateway_investor_swagger_file"  {
  default = "../api-spec/Investor.yaml"
}

# to be deleted
variable "api_gateway_backoffice_swagger_file"  {
  default = "../api-spec/BackOffice.yaml"
}

variable "cognito_user_pool_investors_domain" {
  default = "UNDEF-dev-hni"
}

variable "cognito_user_pool_backoffice_domain" {
  default = "UNDEF-dev-bo"
}

variable "cognito_client_investors_callback" {
  default = "https://investor-UNDEF-dev.ec-internal.com/cognito"
}

variable "cognito_client_investors_signout" {
  default = "https://investor-UNDEF-dev.ec-internal.com"
}

variable "cognito_client_backoffice_callback" {
  default = "https://backoffice-bitz-dev.ec-internal.com/cognito"
}

variable "cognito_client_backoffice_signout" {
  default = "https://backoffice-UNDEF-dev.ec-internal.com"
}

variable "bitz_backoffice_domain" {
  default = "backoffice-UNDEF-dev.ec-internal.com"
}
variable "bitz_investor_domain" {
  default = "investor-UNDEF-dev.ec-internal.com"
}

variable "bitz_cert"  {
  default = "./certs/STAR_ec-internal_com.crt"
}
variable "bitz_chain"  {
  default = "./certs/STAR_ec-internal_com.chain"
}

variable "bitz_key"  {
  default = "./certs/STAR_ec-internal_com.key"
}
*/

provider "aws" {
  profile    = "${var.aws_env_name}"
  region     = "${var.aws_region}"
}

provider "aws" {
  region = "us-east-1"
  alias = "acm"
}


resource "random_id" "stage" {
  byte_length = 8
}

terraform {
    backend "s3" {
        bucket = "${var.company_name}-${var.aws_env_name}-terraform"
        key = "${var.company_name}-${var.aws_env_name}"
        region = "${var.aws_env_name}"
        encrypt = false
    }
}
